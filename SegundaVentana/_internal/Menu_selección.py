# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Menu_selección.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Audita_Pro(object):
    def setupUi(self, Audita_Pro):
        Audita_Pro.setObjectName("Audita_Pro")
        Audita_Pro.resize(582, 656)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Audita_Pro.sizePolicy().hasHeightForWidth())
        Audita_Pro.setSizePolicy(sizePolicy)
        Audita_Pro.setStyleSheet("\n"
"background-color: rgb(9, 154, 194);")
        self.centralwidget = QtWidgets.QWidget(Audita_Pro)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButtonAuditoria = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonAuditoria.setGeometry(QtCore.QRect(140, 510, 131, 71))
        self.pushButtonAuditoria.setStyleSheet("QPushButton {\n"
"    background-color: rgb(203, 246, 255);\n"
"    font: 12pt \"Arial\";\n"
"    border: 2px solid black;\n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(180, 230, 255); /* Color cuando el cursor está sobre el botón */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(150, 220, 255); /* Color cuando el botón está presionado */\n"
"}\n"
"\n"
"\n"
"")
        self.pushButtonAuditoria.setObjectName("pushButtonAuditoria")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 571, 263))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(571, 0))
        self.label.setStyleSheet("font: 10pt \"Arial\";\n"
"background-color: rgb(245, 245, 220);")
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignTop)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 581, 271))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("Imagenes/logo principal.jpg"))
        self.label_2.setObjectName("label_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(300, 510, 131, 71))
        self.pushButton_3.setStyleSheet("QPushButton {\n"
"    background-color: rgb(203, 246, 255);\n"
"    font: 12pt \"Arial\";\n"
"    border: 2px solid black;\n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(180, 230, 255); /* Color cuando el cursor está sobre el botón */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(150, 220, 255); /* Color cuando el botón está presionado */\n"
"}\n"
"\n"
"\n"
"")
        self.pushButton_3.setObjectName("pushButton_3")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 280, 561, 181))
        self.label_3.setObjectName("label_3")
        Audita_Pro.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(Audita_Pro)
        self.statusbar.setObjectName("statusbar")
        Audita_Pro.setStatusBar(self.statusbar)

        self.retranslateUi(Audita_Pro)
        QtCore.QMetaObject.connectSlotsByName(Audita_Pro)

    def retranslateUi(self, Audita_Pro):
        _translate = QtCore.QCoreApplication.translate
        Audita_Pro.setWindowTitle(_translate("Audita_Pro", "Bienvenido Menú Selección"))
        self.pushButtonAuditoria.setText(_translate("Audita_Pro", "Auditoria "))
        self.label.setText(_translate("Audita_Pro", "<html><head/><body><p align=\"justify\"><span style=\" font-size:14pt; font-weight:600;\">¡Bienvenido! </span></p><p align=\"justify\"><br/>Nos complace que estés interesado en evaluar la seguridad en estados reales.</p><p align=\"justify\">Estamos aquí para ayudarte en tus objetivos de seguridad informática.</p><p align=\"justify\">Si estás buscando realizar una auditoría o pruebas de seguridad </p><p align=\"justify\">en entornos reales has llegado al lugar adecuado. </p><p align=\"justify\">Nuestro equipo de expertos está listo para trabajar contigo</p><p align=\"justify\">y proporcionarte el apoyo necesario para llevar a cabo estas evaluaciones.</p><p align=\"justify\">Por favor, a continuación encontrara dos botones,</p><p align=\"justify\">en el cual usted puede elegir realizar una auditoria o el botón de realizar pruebas de seguridad </p></body></html>"))
        self.pushButton_3.setText(_translate("Audita_Pro", "Módulo Estados "))
        self.label_3.setText(_translate("Audita_Pro", "<html><head/><body><p align=\"center\"><span style=\" font-family:\'Arial\',\'sans-serif\'; font-size:14pt; font-weight:600; color:#ffffff;\">¡Bienvenido!</span></p><p><span style=\" font-family:\'Arial\',\'sans-serif\'; font-size:12pt;\">Nos complace que estés interesado en evaluar la seguridad en estados reales.</span></p><p><br/></p><p><span style=\" font-family:\'Arial\',\'sans-serif\'; font-size:12pt;\">Por favor, a continuación encontrarás dos botones, en los cuales puedes elegir a </span></p><p><span style=\" font-family:\'Arial\',\'sans-serif\'; font-size:12pt;\">realizar, una auditoría o realizar pruebas de seguridad</span></p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Audita_Pro = QtWidgets.QMainWindow()
    ui = Ui_Audita_Pro()
    ui.setupUi(Audita_Pro)
    Audita_Pro.show()
    sys.exit(app.exec_())
